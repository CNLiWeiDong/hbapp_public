/*  Load a signed certificate into the ssl context, and configure
    the context for use with a server.

    For this to work with the browser or operating system, it is
    necessary to import the "Beast Test CA" certificate into
    the local certificate store, browser, or operating system
    depending on your environment Please see the documentation
    accompanying the Beast certificate for more details.
*/
/*
    The certificate was generated from CMD.EXE on Windows 10 using:
    winpty openssl dhparam -out dh.pem 2048
    winpty openssl req -newkey rsa:2048 -nodes -keyout key.pem -x509 -days 10000 -out cert.pem  #参数可以按提示输入 -subj "//C=US\ST=CA\L=Los Angeles\O=Beast\CN=www.example.com"

    openssl req -new -x509 -key ca.key -out ca.crt -days 3650 -config openssl.cnf
*/

// 使用方法
ctx.set_password_callback(
    [](std::size_t,
        boost::asio::ssl::context_base::password_purpose)
    {
        return "test";
    });

ctx.set_options(
    boost::asio::ssl::context::default_workarounds |
    boost::asio::ssl::context::no_sslv2 |
    boost::asio::ssl::context::single_dh_use);

ctx.use_certificate_chain(
    boost::asio::buffer(cert.data(), cert.size()));

ctx.use_private_key(
    boost::asio::buffer(key.data(), key.size()),
    boost::asio::ssl::context::file_format::pem);

ctx.use_tmp_dh(
    boost::asio::buffer(dh.data(), dh.size()));

//服务器和客户端使用不同的证书，根证书签名https://blog.csdn.net/chenjh213/article/details/44514805
ctx.load_verify_file("server.csr"); 

ctx.use_certificate_chain_file("server.crt");
ctx.use_private_key_file("server.key",boost::asio::ssl::context::pem);
ctx.use_tmp_dh_file("dh1024.pem");